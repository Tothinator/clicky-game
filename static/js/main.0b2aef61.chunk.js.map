{"version":3,"sources":["components/Hero/synthwave_loop.mp4","components/Wrapper/index.js","components/MiddleTitle/index.js","components/Navbar/index.js","components/Hero/index.js","components/GameCard/index.js","components/WinModal/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","props","react_default","a","createElement","className","children","MiddleTitle","win","lose","Navbar","href","components_MiddleTitle","score","id","topScore","Hero","autoPlay","loop","muted","src","vid","type","GameCard","hasNotLost","style","backgroundImage","concat","image","backgroundSize","onClick","increment","hasLost","hasWon","WinModal","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","App","state","items","guessedItems","_this","length","setState","filter","item","console","log","shuffle","reset","i","j","Math","floor","random","_ref","_this2","this","components_Wrapper","components_Navbar","components_Hero","map","components_GameCard","key","title","components_WinModal","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,06CCOzBC,MAJf,SAAiBC,GACb,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,iBCiC5BC,MAlCf,SAAqBN,GAEjB,GAAIA,EAAMO,IACN,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,uBAKZ,OAAOH,EAAMQ,MACT,KAAK,KACD,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,uCAGZ,KAAK,EACD,OACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,qCAGZ,KAAK,EACD,OACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,uCAGZ,QACI,OAAO,aCHJM,MA1Bf,SAAgBT,GAEZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIO,KAAK,KAAT,eAEJT,EAAAC,EAAAC,cAACQ,EAAD,CACIH,KAAMR,EAAMQ,KACZD,IAAKP,EAAMO,MAEfN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,oBAAYH,EAAMY,QAEtBX,EAAAC,EAAAC,cAAA,MAAIU,GAAG,gBAAP,KACAZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,wBAAgBH,EAAMc,qCCH/BC,MAff,WACI,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,SAAOU,GAAG,WAAWG,UAAQ,EAACC,MAAI,EAACC,OAAK,GACpCjB,EAAAC,EAAAC,cAAA,UAAQgB,IAAKC,IAAKC,KAAK,eAE3BpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,qGCoBDmB,MA7Bf,SAAkBtB,GAEd,IAAMuB,EAAatB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCS,GAAIb,EAAMa,GAAIW,MAAQ,CACzFC,gBAAe,OAAAC,OAAS1B,EAAM2B,MAAf,KACfC,eAAgB,SAChBC,QAAS,kBAAM7B,EAAM8B,UAAU9B,EAAMa,OAGnCkB,EAAU9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CAA2CS,GAAIb,EAAMa,GAAIW,MAAQ,CAC5FC,gBAAe,OAAAC,OAAS1B,EAAM2B,MAAf,KACfC,eAAgB,SAChBC,QAAS,kBAAM7B,EAAM8B,UAAU9B,EAAMa,OAGnCmB,EAAS/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAA8CS,GAAIb,EAAMa,GAAIW,MAAQ,CAC9FC,gBAAe,OAAAC,OAAS1B,EAAM2B,MAAf,KACfC,eAAgB,SAChBC,QAAS,kBAAM7B,EAAM8B,UAAU9B,EAAMa,OAGzC,OAAIb,EAAMO,IACCyB,EAINhC,EAAMQ,KAAOuB,EAAUR,SCDjBU,MAxBf,SAAkBjC,GAEd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaS,GAAG,WAAWqB,SAAS,KAAKC,KAAK,SAASC,kBAAgB,gBAAgBC,cAAY,QAC9GpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe+B,KAAK,YAC/BlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcS,GAAG,iBAA/B,YACAZ,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASjB,UAAU,QAAQkC,eAAa,QAAQC,aAAW,SACpEtC,EAAAC,EAAAC,cAAA,QAAMkC,cAAY,QAAlB,UAGRpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,iEAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASjB,UAAU,kBAAkBkC,eAAa,SAA/D,qBCmHTE,6MA3HbC,MAAQ,CACN7B,MAAO,EACPE,SAAU,EACVP,KAAK,EACLC,KAAM,KACNkC,QACAC,aAAc,MAGhBb,UAAY,SAACjB,GAG4B,IAAnC+B,EAAKH,MAAME,aAAaE,QAC1BD,EAAKE,SAAS,CACZvC,KAAK,EACLC,KAAM,OAI4D,IAAlEoC,EAAKH,MAAME,aAAaI,OAAO,SAAAC,GAAI,OAAIA,EAAKnC,KAAOA,IAAIgC,QAIzDD,EAAKE,SAAS,CAAEtC,MAAM,IACtBoC,EAAKE,SAAS,CAAElC,MAAO,IACvBgC,EAAKE,SAAS,CAAEH,aAAc,OAK9BC,EAAKE,SAAU,SAAAL,GACb,IAAME,EAAgBF,EAAME,aAAajB,OACvCkB,EAAKH,MAAMC,MAAMK,OACf,SAAAC,GAAI,OAAIA,EAAKnC,KAAOA,IAAI,IAG5B,OADAoC,QAAQC,IAAIP,GACL,CACL/B,MAAO6B,EAAM7B,MACbE,SAAU2B,EAAM3B,SAChBP,IAAKkC,EAAMlC,IACXC,KAAMiC,EAAMjC,KACZkC,MAAOD,EAAMC,MACbC,aAAcA,KAMlBC,EAAKE,SACH,CACElC,MAAOgC,EAAKH,MAAM7B,MAAQ,EAC1BJ,MAAM,GACL,WAGAoC,EAAKH,MAAM7B,MAAQgC,EAAKH,MAAM3B,UAAa8B,EAAKE,SAAS,CAAEhC,SAAU8B,EAAKH,MAAM7B,QAG7EgC,EAAKH,MAAM7B,QAAUgC,EAAKH,MAAMC,MAAMG,SAExCI,QAAQC,IAAI,YACZN,EAAKE,SAAS,CACZlC,MAAO,EACP+B,aAAc,GACdpC,KAAK,OAMbqC,EAAKO,cAITC,MAAQ,WACNR,EAAKE,SAAS,CACZlC,MAAO,EACPL,KAAK,EACLC,KAAM,KACNmC,aAAc,QAIlBQ,QAAU,WAEN,IADF,IAAIT,EAAQE,EAAKH,MAAMC,MACZW,EAAIX,EAAMG,OAAS,EAAGQ,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADDK,EAElB,CAAChB,EAAMY,GAAIZ,EAAMW,IAAvCX,EAAMW,GAFkCK,EAAA,GAE9BhB,EAAMY,GAFwBI,EAAA,GAI7Cd,EAAKE,SAAS,CAAEJ,MAAOA,6EAGhB,IAAAiB,EAAAC,KACP,OACE3D,EAAAC,EAAAC,cAAC0D,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAD,CACElD,MAAOgD,KAAKnB,MAAM7B,MAClBE,SAAU8C,KAAKnB,MAAM3B,SACrBN,KAAMoD,KAAKnB,MAAMjC,KACjBD,IAAKqD,KAAKnB,MAAMlC,MAElBN,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACZwD,KAAKnB,MAAMC,MAAMsB,IAAI,SAAAhB,GAAI,OACxB/C,EAAAC,EAAAC,cAAC8D,EAAD,CACEpD,GAAImC,EAAKnC,GACTqD,IAAKlB,EAAKnC,GACVsD,MAAOnB,EAAKmB,MACZxC,MAAOqB,EAAKrB,MACZG,UAAW6B,EAAK7B,UAChBtB,KAAMmD,EAAKlB,MAAMjC,KACjBD,IAAKoD,EAAKlB,MAAMlC,SAItBN,EAAAC,EAAAC,cAACiE,EAAD,CACE7D,IAAKqD,KAAKnB,MAAMlC,cAtHR8D,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0b2aef61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/synthwave_loop.41a9b879.mp4\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n    return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction MiddleTitle(props) {\r\n    \r\n    if (props.win) {\r\n        return (\r\n            <div className=\"text-center game-message win glow\">\r\n                <h2>You Won!</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switch(props.lose) {\r\n        case null:\r\n            return (\r\n                <div className=\"text-center game-message\">\r\n                    <h2>Click an image to begin!</h2>\r\n                </div>\r\n            );\r\n        case false: \r\n            return (\r\n                <div className=\"text-center game-message correct\">\r\n                    <h2>You guessed correctly!</h2>\r\n                </div>\r\n            );\r\n        case true: \r\n            return (\r\n                <div className=\"text-center game-message wrong\">\r\n                    <h2>You guessed incorrectly!</h2>\r\n                </div>\r\n            );\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default MiddleTitle;","import React from \"react\";\nimport MiddleTitle from \"../MiddleTitle\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n\n    return (\n        <nav className=\"navbar fixed-top navbar-dark bg-dark\">\n            <div className=\"container\">\n                <nav className=\"navbar-brand\">\n                    <h1 href=\"/\">Click Fury</h1>\n                </nav>\n                <MiddleTitle \n                    lose={props.lose}\n                    win={props.win}\n                />\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <h3>Score: {props.score}</h3>\n                    </li>\n                    <h3 id=\"navbar-break\">|</h3>\n                    <li className=\"nav-item\">\n                        <h3>Top Score: {props.topScore}</h3>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport vid from \"./synthwave_loop.mp4\";\nimport \"./style.css\";\n\nfunction Hero() {\n    return (\n        <div className=\"jumbotron text-center\">\n            <video id=\"hero-vid\" autoPlay loop muted>\n                <source src={vid} type=\"video/mp4\"></source>\n            </video>\n            <div className=\"caption\">\n                <h1>Click Fury</h1>\n                <h3>Click on images to earn points, but don't click on any of them more than once!</h3>\n                {/* <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#winModal\">Modal</button> */}\n            </div>\n        </div>\n    );\n}\n\nexport default Hero;","import React from \"react\";\nimport \"./style.css\";\n\nfunction GameCard(props) {\n\n    const hasNotLost = <div className=\"col-md-4 col-sm-6 col-12 card item\" id={props.id} style={ {\n        backgroundImage: `url(${props.image})`,\n        backgroundSize: \"cover\"\n    } } onClick={() => props.increment(props.id)}>\n    </div>\n\n    const hasLost = <div className=\"col-md-4 col-sm-6 col-12 card item shake\" id={props.id} style={ {\n        backgroundImage: `url(${props.image})`,\n        backgroundSize: \"cover\"\n    } } onClick={() => props.increment(props.id)}>\n    </div>\n\n    const hasWon = <div className=\"col-md-4 col-sm-6 col-12 card item win-card\" id={props.id} style={ {\n        backgroundImage: `url(${props.image})`,\n        backgroundSize: \"cover\"\n    } } onClick={() => props.increment(props.id)}>\n    </div>\n\n    if (props.win) {\n        return hasWon;\n    }\n\n    return (\n         props.lose ? hasLost : hasNotLost \n    )\n}\n\nexport default GameCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction WinModal(props) {\n\n    return (\n        <div className=\"modal fade\" id=\"winModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"winModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header glow\">\n                        <h5 className=\"modal-title\" id=\"winModalLabel\">You won!</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>You've gotten the highest possible score! Congrats!</p>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WinModal;","import React, {Component} from \"react\";\nimport \"./App.css\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Hero from \"./components/Hero\";\nimport GameCard from \"./components/GameCard\";\nimport WinModal from \"./components/WinModal\";\nimport items from \"./items.json\";\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    topScore: 0,\n    win: false,\n    lose: null,\n    items,\n    guessedItems: []\n  }\n\n  increment = (id) => {\n\n    // Reset the game if the user has won, to do this, if guessed items is empty, reset win to false and lose to false\n    if (this.state.guessedItems.length === 0) {\n      this.setState({\n        win: false,\n        lose: null\n      })\n    }\n\n    if (this.state.guessedItems.filter(item => item.id === id).length === 1){\n\n      // User guessed previously guessed image, reset score to 0 after updating topScore\n      // Display lose alert and shuffle after display\n      this.setState({ lose: true });\n      this.setState({ score: 0 });\n      this.setState({ guessedItems: []});\n\n    } else {\n      // If the item isn't in previously guessed then filter items and push that\n      // to guessed state, THEN remove item from items state\n      this.setState( state => { \n        const guessedItems =  state.guessedItems.concat(\n          this.state.items.filter(\n            item => item.id === id)[0]\n        );\n        console.log(guessedItems);\n        return {\n          score: state.score,\n          topScore: state.topScore,\n          win: state.win,\n          lose: state.lose,\n          items: state.items,\n          guessedItems: guessedItems\n        }\n      });\n      \n      //user guessed new image, add to score and shuffle images\n      //also set lose to false so the middle title updates\n      this.setState(\n        { \n          score: this.state.score + 1,\n          lose: false\n        }, () => {\n\n          // Increases top score!\n          (this.state.score > this.state.topScore) && this.setState({ topScore: this.state.score });\n\n          // User Wins!!\n          if (this.state.score === this.state.items.length) {\n\n            console.log(\"Success!\");\n            this.setState({ \n              score: 0,\n              guessedItems: [],\n              win: true\n            });\n          }\n\n        });\n\n      this.shuffle();\n    }\n  }\n\n  reset = () => {\n    this.setState({\n      score: 0,\n      win: false,\n      lose: null,\n      guessedItems: []\n    });\n  }\n\n  shuffle = () => {\n    let items = this.state.items;\n      for (let i = items.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [items[i], items[j]] = [items[j], items[i]];\n      }\n    this.setState({ items: items});\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Navbar \n          score={this.state.score}\n          topScore={this.state.topScore}\n          lose={this.state.lose}\n          win={this.state.win} \n        />\n        <Hero />\n        <div className=\"container card-container row justify-content-center\">\n          {this.state.items.map(item => (\n            <GameCard\n              id={item.id}\n              key={item.id}\n              title={item.title}\n              image={item.image}\n              increment={this.increment}\n              lose={this.state.lose}\n              win={this.state.win} \n            />\n          ))}\n        </div>\n        <WinModal\n          win={this.state.win} \n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}